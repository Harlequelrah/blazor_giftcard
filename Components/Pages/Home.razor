@page "/"
@inject ToastrService Notify
@using blazor_giftcard.Services
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel.DataAnnotations.Schema
@using System.Text.Json.Serialization
@inject NavigationManager Navigation

<head>

<link rel="stylesheet" href="Layout.css" />
</head>
<PageTitle>Home</PageTitle>

@if (errorMessages.Count > 0)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in errorMessages)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}
<div class="container">
<EditForm Model="user" OnValidSubmit="HandleRegistration" FormName="registerForm" >
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <InputText @bind-Value="user.Email" placeholder="Email" />
    </div>
    <div>
        <InputText @bind-Value="user.Password" class="password-input" type="@(showPassword ? "text" : "password")" placeholder="Password" />
                <button type="button" style="margin-right:2px;margin-top:-75px;" @onclick="TogglePasswordVisibility" class="password-toggle-btn">
            <i class="bi @(showPassword ? "bi-eye-slash" : "bi-eye")"></i>
        </button>
    </div>
      <div>
        <InputText @bind-Value="user.Adresse" placeholder="Adresse" />
    </div>
      <div>
        <InputText @bind-Value="user.SubscriberName" placeholder="Nom de la structure" />
    </div>
      <div>
        <InputText @bind-Value="user.Telephone"  placeholder="Telephone"/>
    </div>
    <button type="submit">Register</button>
</EditForm>
  <div class="drop drop-1">
  <p>Bienvenue sur la plateforme du service GIFTCARD de GoChap</p>
  </div>
  <div class="drop drop-2"></div>
  <div class="drop drop-3">
<p>Remplissez le formulaire suivant pour enregistrer votre entreprise comme souscripteur</p>
  </div>
  <div class="drop drop-4"></div>
  <div class="drop drop-5"></div>
</div>
@code {
    [SupplyParameterFromForm]
    private User user { get; set; } = new User();
    private List<string> errorMessages = new List<string>();
            private bool showPassword = false;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private async Task HandleRegistration()
    {
        errorMessages.Clear();
        Notify.Info("L'enregistrement est en cours,Veuillez patienter quelques instants","Information");
        var response = await Http.PostAsJsonAsync("https://localhost:7168/api/User/register/subscriber", user);
        if (response.IsSuccessStatusCode)
        {
            Notify.Success("Votre enregistrement s'est déroulé avec succès");
            await Task.Delay(150);
            Navigation.NavigateTo("/login");
        }
        else
        {
            var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
            if (errorResponse != null && errorResponse.Errors != null)
            {
                foreach (var error in errorResponse.Errors)
                {
                    foreach (var errorMessage in error.Value)
                    {
                        Notify.Error(errorMessage) ;
                        errorMessages.Add(errorMessage);
                    }
                }
            }
            else
            {
                errorMessages.Add("An unknown error occurred.");
            }
        }
    }

    public class User
    {
        [EmailAddress]
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        public string Adresse { get; set; }
        [Required]
        public string SubscriberName { get; set; }
        [Required]
        public string Telephone { get; set; }
    }

    public class ErrorResponse
    {
        public Dictionary<string, string[]> Errors { get; set; }
        public string Type { get; set; }
        public string Title { get; set; }
        public int Status { get; set; }
        public string TraceId { get; set; }
    }
}
