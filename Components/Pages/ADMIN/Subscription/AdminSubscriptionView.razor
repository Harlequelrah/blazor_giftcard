@page "/admin/subscription/view"
@using blazor_giftcard.Services
@using blazor_giftcard.Models
@inject ToastrService Notify
@inject SubscriberService SS
@inject AdminService AS
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject CustomAuthenticationStateProvider CAST
@inject UserContextService UserContext
@rendermode InteractiveServer
<head>

<link rel="stylesheet" href="ListView.css" />
</head>
<PageTitle>Subscription</PageTitle>
<h3>Souscriptions</h3>
<div class="container">
    @if (Subscriptions == null)
    {
        <div class="drop col-md-3">
        <p>Loading...</p>
        </div>
    }
    else if (Subscriptions.Count == 0)
    {
    <div class="drop col-md-3" style="height:100px;">
        <p>No subscriptions available.</p>
        </div>
    }
    else
    {
        <div class="listview-container">
            <table class="listview-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Package</th>
                        <th>Souscripteur</th>
                        <th>Budget Restant</th>
                        <th>Date Souscription</th>
                        <th>Date Expiration</th>
                        <th>Carte Genere</th>
                        <th>Montant/Carte</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var subscription in Subscriptions)
                    {
                        <tr>
                            <td>@subscription.Id</td>
                            <td>@subscription.NomPackage</td>
                            <td>@subscription.NomSubscriber</td>
                            <td>@subscription.BudgetRestant</td>
                            <td>@subscription.DateSouscription</td>
                            <td>@subscription.NbrCarteGenere</td>
                            <td> @((!string.IsNullOrEmpty(subscription.DateExpiration)) ? subscription.DateExpiration :"Illimit√©")</td>
                            <td>@(subscription.MontantParCarte.HasValue? subscription.MontantParCarte.ToString(): "Non Defini")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>


<Redirection Url="admin/subscription/view" />

@code
{
    private List<Subscription> Subscriptions =new List<Subscription>();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(100);
            await LoadSubscriptions();
            StateHasChanged();
        }
    }

    private async Task LoadSubscriptions()
    {

        try
        {
                Subscriptions = await AS.GetSubscriptionsAsync();



        }
                catch (Exception ex)
        {
            Notify.Error("Error retrieving subscriptions", "Erreur");
            Console.WriteLine($"Error loading Subscriptions: {ex.Message}");
        }
    }
}
